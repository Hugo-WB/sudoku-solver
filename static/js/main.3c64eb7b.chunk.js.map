{"version":3,"sources":["components/SudokuCell.js","components/SudokuRow.js","theme.js","Header/Header.js","components/createEmptyBoard.js","components/loading.js","solver/solver.js","App.js","components/Stats.js","serviceWorker.js","index.js"],"names":["SudokuCell","props","state","values","appState","x","y","getIndex","bind","isGreen","this","startY","startX","Box","className","bgcolor","fontFamily","nextProps","prevState","Component","SudokuRow","constructRow","row","push","key","renderRow","createMuiTheme","palette","primary","main","secondary","themeName","Header","display","justifyContent","flexDirection","margin","Grid","container","spacing","xs","md","Typography","color","variant","Button","onClick","solveB","newBoard","name","imediateSolve","createEmptyBoard","generatedValues","Loading","solve","loop","inputBoard","board","clone","obj","Date","copy","setTime","getTime","Array","i","len","length","Object","attr","hasOwnProperty","Error","possible","n","result","quadrant","Math","floor","yQuad","xQuad","steps","start","window","performance","now","solveSudoku","j","k","end","time","round","Stats","justify","alignItems","item","Card","style","backgroundColor","CardContent","stats","moves","App","isLoading","solverStats","constructSudokuTable","fetchNewSudoku","solveBoard","setToLoad","sudoku","timeTaken","console","log","setState","setInterval","clearInterval","updateBoard","fetch","then","response","json","data","inputData","sudokuTable","ThemeProvider","theme","sudokuTheme","alignContent","load","loading","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3c64eb7b.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport {Box,Typography} from \"@material-ui/core\"\nimport \"../App.css\"\nimport 'typeface-roboto';\n\nexport default class SudokuCell extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      values: this.props.appState.values,\n      x: this.props.x,\n      y: this.props.y,\n      // passed: this.props.passed \n    }\n    this.getIndex= this.getIndex.bind(this)\n  }\n  \n  static getDerivedStateFromProps(nextProps, prevState){\n    return {\n      values:nextProps.appState.values,\n      x: nextProps.x,\n      y: nextProps.y,\n      // passed: nextProps.passed\n    }\n  }\n  // componentWillReceiveProps(){\n  //   this.state.x = \n  // }\n  getIndex(y,x){\n    return (y*9)+x+1\n  }\n  render() {\n    let isGreen = false;\n    if((this.getIndex(this.props.y,this.props.x))<=(this.getIndex(this.props.appState.startY,this.props.appState.startX))){\n      isGreen = true\n    }\n    // console.log(this.props.appState.startY,this.props.appState.startX)\n    return (      \n      \n      <Box className = \"sudokuCell\" bgcolor={isGreen ? \"#80cbc4\" : \"#e57373 \"}>\n        <b>\n        <p className={isGreen ? \"sudokuCellTextBlack\":\"sudokuCellTextBlack\"} fontFamily=\"typeface-roboto\" >\n          {this.props.appState.values[this.props.y][this.props.x]}\n        </p>\n        \n        </b>\n        {/* <p>{isGreen}{this.props.appState.startY}{this.props.appState.startX}</p> */}\n      </Box>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport {Box,Grid} from \"@material-ui/core\"\nimport \"../App.css\"\nimport SudokuCell from \"./SudokuCell\"\n\nexport default class SudokuRow extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      y: this.props.y,\n      values:this.props.appState.values,\n    }\n    this.constructRow = this.constructRow.bind(this)\n  }\n  static getDerivedStateFromProps(nextProps, prevState){\n    return {\n      values:nextProps.appState.values,\n      y: nextProps.y\n    }\n  }\n  constructRow(){\n    const row = []\n    for (let x = 0; x < 9; x++) {\n      row.push(\n        <SudokuCell x = {x} y={this.state.y} appState = {this.props.appState} key ={[this.state.y,x]}/>\n      )\n    }\n    return row\n  }\n  render() {\n    const renderRow = this.constructRow()\n    return (\n      <Box className = \"sudokuRow\">\n        {renderRow}\n      </Box>\n    )\n  }\n}\n","// src/ui/theme/index.js\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport 'typeface-roboto';\n\n\nconst palette = {\n  primary: { main: '#455A64' },\n  secondary: { main: '#E0E0E0' }\n};\n\n// const palette = {\n//   primary: { main: '#3f51b5' },\n//   secondary: { main: '#f50057' }\n// };\n\nconst themeName = 'sudokuTheme';\n\n\nexport default createMuiTheme({ palette, themeName });\n","import React, { Component } from \"react\";\n\nimport { Typography, Box, Paper, Button ,ThemeProvider,Checkbox,Grid} from \"@material-ui/core\";\nimport \"../App.css\";\nimport sudokuTheme from \"../theme\"\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nexport default class Header extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n\n    }\n  }\n  render() {\n    return (\n      <Box display=\"flex\" justifyContent=\"space-around\" flexDirection=\"column\">\n        <Box margin=\"2em\">\n          <Grid container spacing = {2} className=\"gridContainer\">\n            <Grid container xs ={12} md={12} className=\"gridContainer\">\n              <Typography color=\"primary\" variant=\"h1\">\n                Sudoku Solver\n              </Typography>\n            </Grid>\n            <Grid container xs={12} md={3} className=\"gridContainer\">\n              <Button\n              color = \"primary\"\n              variant=\"outlined\"\n              onClick={this.props.solveB}\n              >Solve with Backtracking</Button>\n\n            </Grid>\n            \n            <Grid container xs={12} md={3} className=\"gridContainer\">\n              <Button\n                color = \"primary\"\n                onClick = {this.props.newBoard}\n                variant=\"outlined\"\n                name=\"load\"\n              >Load New Sudoku Problem</Button>\n              \n            </Grid>\n            \n            <Grid container xs={12} md={3} className=\"gridContainer\">\n              <Button\n              color = \"primary\"\n              variant=\"outlined\"\n              onClick={this.props.imediateSolve}\n              >Show Answer</Button>\n              \n            </Grid>\n          </Grid>\n\n        </Box>\n        \n        <div />\n      </Box>\n    );\n  }\n}\n","function createEmptyBoard(){\n  const loading = false\n    const generatedValues = []\n      for (let y = 0; y < 9; y++) {\n        const row = []\n        for (let x = 0; x < 9; x++) {\n          row.push(\"...\")\n        }\n        generatedValues.push(row)\n      }\n    return generatedValues\n}\n\nexport default createEmptyBoard","import React from 'react';\nimport './loading.scss';\n\n\nexport default function Loading() {\n    return (\n        <div className=\"dk-loading\">\n            <div className=\"yellow\">\n                <div className=\"red\">\n                    <div className=\"violet\">\n                        <div className=\"yellow\">\n                            <div className=\"red\">\n                                <div className=\"violet circle\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import { cloneElement } from \"react\";\nfunction clone(obj) {\n  // Handle the 3 simple types, and null or undefined\n  if (null == obj || \"object\" != typeof obj) return obj;\n\n  // Handle Date\n  if (obj instanceof Date) {\n    var copy = new Date();\n    copy.setTime(obj.getTime());\n    return copy;\n  }\n\n  // Handle Array\n  if (obj instanceof Array) {\n    var copy = [];\n    for (var i = 0, len = obj.length; i < len; i++) {\n      copy[i] = clone(obj[i]);\n    }\n    return copy;\n  }\n\n  // Handle Object\n  if (obj instanceof Object) {\n    var copy = {};\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\n    }\n    return copy;\n  }\n\n  throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n}\nfunction solve(inputBoard) {\n  const board = clone(inputBoard);\n  // const board = inputBoard\n  function possible(y, x, n) {\n    var result = true;\n    for (let i = 0; i < 9; i++) {\n      if (board[y][i] === n || board[i][x] === n) {\n        result = false;\n      }\n    }\n\n    const quadrant = [Math.floor(y / 3), Math.floor(x / 3)];\n    for (let yQuad = 3 * quadrant[0]; yQuad < 3 * quadrant[0] + 3; yQuad++) {\n      for (let xQuad = 3 * quadrant[1]; xQuad < 3 * quadrant[1] + 3; xQuad++) {\n        if (board[yQuad][xQuad] === n) {\n          result = false;\n        }\n      }\n    }\n    // console.log(\"potato\"+result)\n    return result;\n  }\n  // function loop(){\n  //   for (let y = 0; y < 9; y++) {\n  //     for (let x = 0; x < 9; x++) {\n  //       if (board[y][x] === 0){\n  //         for (let i = 1; i < 10; i++) {\n  //           if (possible(y,x,i)){\n  //             console.log(y,x,i)\n  //             board[y][x] = i\n  //             console.log(\"?\"+board)\n  //             loop()\n  //             board[y][x]=0\n  //           }\n\n  //         }\n  //         return\n  //       }\n  //     }\n  //   }\n  // }\n  const steps = [];\n\n  function solveSudoku(board) {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (board[i][j] == 0) {\n          for (let k = 1; k <= 9; k++) {\n            if (possible(i, j, k)) {\n              board[i][j] = k;\n              steps.push([i, j, k]);\n              if (solveSudoku(board)) {\n                return true;\n              } else {\n                board[i][j] = 0;\n                steps.push([i, j, 0]);\n              }\n            }\n          }\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  const start = window.performance.now();\n  \n  solveSudoku(board);\n  const end = window.performance.now();\n  const time = Math.round(end - start);\n  steps.push([8,8,board[8][8]])\n  return [steps, time,board];\n}\n// console.log(solve(inBoard))\nexport default solve;\n","import React, { Component } from \"react\";\nimport {Box,Grid,ThemeProvider} from \"@material-ui/core\"\nimport SudokuRow from \"./components/SudokuRow\"\nimport Header from \"./Header/Header\";\nimport createEmptyBoard from \"./components/createEmptyBoard\"\nimport sudokuTheme from \"./theme\"\nimport \"./App.css\";\nimport loading from \"./components/loading\"\nimport solve from \"./solver/solver\"\nimport Stats from \"./components/Stats\"\nlet loop\nexport default class App extends Component {\n  constructor(){\n    super()\n    this.state= {\n      values:createEmptyBoard(),\n      isLoading:true,\n      solverStats:{\n        moves: 0,\n        time: 0,\n      },\n      startY:0,\n      startX:0,\n      \n    }\n    this.constructSudokuTable = this.constructSudokuTable.bind(this)\n    this.fetchNewSudoku = this.fetchNewSudoku.bind(this)\n    this.solveBoard = this.solveBoard.bind(this)\n    this.setToLoad=this.setToLoad.bind(this)\n    this.imediateSolve = this.imediateSolve.bind(this)\n  }\n  componentDidMount(){\n    this.fetchNewSudoku()\n  }\n  constructSudokuTable(){\n    const sudoku = []\n    for (let y = 0; y < 9; y++) {\n      sudoku.push(\n        <SudokuRow y={y} appState = {this.state} key ={y}/>\n      )\n    }\n    return sudoku\n  }\n  solveBoard(){\n    const [steps,timeTaken] = solve(this.state.values)\n    if(steps === []){\n      return\n    }\n    console.log(steps)\n    // console.log(timeTaken)\n    this.setState({\n      solverStats:{\n        moves:steps.length,\n        time: timeTaken, \n      }\n    })\n    let i =0;\n    loop = setInterval(() => {\n      if (i>=(steps.length-1)){\n        console.log(\"hello\")\n        this.setState({\n          startY:10,\n          startX:10,\n        })\n        clearInterval(loop)\n      }\n      this.setState((prevState)=>{\n        const updateBoard = prevState.values\n        updateBoard[steps[i][0]][steps[i][1]] =steps[i][2]\n        return{\n          startY: steps[i][0],\n          startX: steps[i][1],\n          values:updateBoard,\n      }})\n      i++\n    }, 1000);\n  }\n  imediateSolve(){\n    const [steps,timeTaken,board] = solve(this.state.values)\n    if(steps === []){\n      return\n    }\n    this.setState({\n      solverStats:{\n        moves:steps.length,\n        time: timeTaken, \n      },\n      values:board,\n      startX:20,\n      startY:20,\n    })\n  }\n  fetchNewSudoku(){\n    clearInterval(loop)\n    this.setState({\n      isLoading:true,\n      startY:0,\n      startX:0,\n    })\n    fetch(\"https://sugoku.herokuapp.com/board?difficulty=easy\")\n    .then(response => response.json())\n    .then(data => {\n      const inputData = data.board\n      this.setState({\n        values: inputData,\n        isLoading:false,\n      })\n      \n    })\n    \n    \n  }\n  setToLoad(){\n    console.log(this.state.values)\n  }\n  render() {\n    const sudokuTable = this.constructSudokuTable()\n      return (\n        <ThemeProvider theme = {sudokuTheme}>\n        <Box display = \"flex\" alignContent=\"center\" justifyContent=\"center\" flexDirection=\"column\" bgcolor=\"#eceff1\">\n        <Header newBoard = {this.fetchNewSudoku} solveB={this.solveBoard} load={this.setToLoad} imediateSolve={this.imediateSolve}/>\n        <Box className=\"sudokuBox\">\n          {this.state.isLoading ? loading:sudokuTable}\n        </Box>\n        <Stats stats = {this.state.solverStats}/>\n        </Box>\n        </ThemeProvider>\n        \n      )\n  }\n}\n","import React, { Component } from 'react'\nimport {Box,Typography,Paper,Card, CardContent,Grid} from \"@material-ui/core\"\nimport sudokuTheme from \"../theme\"\nimport \"../App.css\"\n\nexport default class Stats extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n\n    }\n  }\n  render() {\n    return (\n      <Box margin=\"1em\">\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className=\"resultsGrid\">\n          <Grid item xs = {12} md={4}>\n            <Card className=\"statsBox\" style={{backgroundColor:\"#eceff1\"}}>\n              <CardContent>\n                <Typography color=\"primary\" variant=\"h6\" className=\"resultText\">\n                  Time taken: {this.props.stats.time} ms\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs = {12} md={4}>\n            <Card className = \"statsBox\" style={{backgroundColor:\"#eceff1\"}}>\n              <CardContent>\n                <Typography color=\"primary\" variant=\"h6\" className=\"resultText\">\n                  Number of Moves made: {this.props.stats.moves}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}